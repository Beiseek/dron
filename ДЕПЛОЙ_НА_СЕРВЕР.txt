### ИНСТРУКЦИЯ ПО РАЗВЕРТЫВАНИЮ DJANGO-ПРОЕКТА ###

**ВАЖНО:** Все команды выполняются на сервере (`91.229.9.60`), к которому вы должны подключиться по SSH.

---
**Шаг 1: Подготовка и запуск скрипта**
---
1. Подключитесь к серверу по SSH.
   ```shell
   ssh root@91.229.9.60 
   ```
   (или `ssh <ваш_пользователь>@91.229.9.60`)

2. Создайте файл `deploy.sh` на сервере и скопируйте в него содержимое одноименного файла из вашего проекта.
   ```shell
   nano deploy.sh 
   ```
   (вставьте текст, сохраните `Ctrl+X`, `Y`, `Enter`)

3. Сделайте скрипт исполняемым:
   ```shell
   chmod +x deploy.sh
   ```
4. Запустите скрипт. Он установит все необходимое, скачает проект и настроит окружение.
   ```shell
   ./deploy.sh
   ```
   Скрипт в конце запустит Gunicorn для теста. Остановите его (`Ctrl+C`) и переходите к следующему шагу.

---
**Шаг 2: Настройка Gunicorn (чтобы приложение работало в фоне)**
---
1. Создайте файл службы `gunicorn.service`.
   ```shell
   nano /etc/systemd/system/gunicorn.service
   ```
2. Скопируйте в него содержимое файла `gunicorn.service` из вашего проекта.
   * **Обязательно** замените `<ВАШ_ПОЛЬЗОВАТЕЛЬ>` на имя пользователя, от которого будет работать Gunicorn (например, `root` или ваш основной пользователь).

3. Запустите и активируйте службу Gunicorn:
   ```shell
   sudo systemctl start gunicorn
   sudo systemctl enable gunicorn 
   ```
4. Проверьте статус службы, чтобы убедиться, что все работает:
   ```shell
   sudo systemctl status gunicorn 
   ```
   (Должно быть `active (running)`. Для выхода нажмите `Q`).

---
**Шаг 3: Настройка Nginx (веб-сервер)**
---
1. Создайте файл конфигурации для вашего сайта в Nginx:
   ```shell
   sudo nano /etc/nginx/sites-available/dron
   ```
2. Скопируйте в него содержимое файла `nginx.conf` из вашего проекта.

3. Создайте символическую ссылку, чтобы включить этот сайт:
   ```shell
   sudo ln -s /etc/nginx/sites-available/dron /etc/nginx/sites-enabled/
   ```

4. Проверьте конфигурацию Nginx на наличие ошибок:
   ```shell
   sudo nginx -t
   ```
   (Должно быть `syntax is ok` и `test is successful`).

5. Перезапустите Nginx, чтобы применить изменения:
   ```shell
   sudo systemctl restart nginx
   ```

---
**Шаг 4: Настройка HTTPS (SSL-сертификат)**
---
1. Установите Certbot для автоматического получения SSL-сертификатов:
   ```shell
   sudo apt-get install -y certbot python3-certbot-nginx
   ```
2. Запустите Certbot. Он автоматически найдет ваш домен `ktlab.store` в конфигурации Nginx и настроит HTTPS.
   ```shell
   sudo certbot --nginx -d ktlab.store
   ```
   *   Certbot задаст несколько вопросов (email, согласие с условиями).
   *   Выберите `2`, чтобы настроить автоматическое перенаправление с HTTP на HTTPS.

После этого ваш сайт должен быть доступен по адресу `https://ktlab.store`.
*Если DNS еще не обновился, вы можете временно обращаться к сайту по IP `http://91.229.9.60`. HTTPS для IP-адреса работать не будет.*
