# Generated by Django 4.2.7 on 2025-10-17 15:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Тренажер БПЛА с реалистичной физикой и режимом от первого лица', max_length=200)),
                ('text_in_frame', models.TextField(default='Отрабатывайте пилотирование в реальных полетных условиях и на разнообразных картах в режиме свободного полета. Усложните задачу: выследите и найдите подвижную цель на локациях с помощью специального режима «Поиск».')),
                ('subtitle', models.CharField(default='Симулятор FPV дронов с детально проработанной физикой', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContactForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=150)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('organization_name', models.CharField(max_length=200)),
                ('comment', models.TextField()),
                ('privacy_policy_accepted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default='info@example.com', max_length=254)),
                ('phone', models.CharField(default='+7 (999) 123-45-67', max_length=20)),
                ('our_logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
                ('partner_logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FPVMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='fpv_images/')),
                ('description', models.TextField(default='Симулятор FPV дронов с детально проработанной физикой для тренировок в режиме от первого лица.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product_images/')),
                ('description', models.TextField(default='Симулятор управления дроном создан для тренировки навыков управления БПЛА. В нем представлено множество локаций и сценариев, таких как:\n\nпилотирование дрона в городе;\nиспользование дрона в лесной и сельской местности;\nполеты на заброшенном заводе;\nгонки на дронах;\nи другие.\n\nКаждый из биомов обладает своими уникальными особенностями, а вариативность сложности трасс позволяет беспрерывно оттачивать навыки пилотирования на высокой скорости. Это комплексное решение предназначено для подготовки как начинающих спортсменов, так и профессионалов дрон-рейсинга и не имеет аналогов в Российской Федерации.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PurchaseOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('price', models.CharField(max_length=100)),
                ('is_custom', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ScreenshotAlbum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('order', models.PositiveIntegerField(db_index=True, default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Trailer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_url', models.URLField(blank=True, help_text='URL видео с YouTube или другого видеохостинга', null=True)),
                ('local_video', models.FileField(blank=True, help_text='Либо загрузите видеофайл', null=True, upload_to='videos/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('supported_os', models.CharField(default='Linux, Windows, macOS, РЕД ОС, Astra Linux, uncomOS', max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Screenshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='screenshots/')),
                ('caption', models.CharField(blank=True, max_length=100)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screenshots', to='landing.screenshotalbum')),
            ],
        ),
    ]
